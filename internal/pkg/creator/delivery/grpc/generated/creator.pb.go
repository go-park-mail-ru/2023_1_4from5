// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: creator.proto

package generated

import (
	proto "github.com/go-park-mail-ru/2023_1_4from5/internal/models/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeywordMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
}

func (x *KeywordMessage) Reset() {
	*x = KeywordMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeywordMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordMessage) ProtoMessage() {}

func (x *KeywordMessage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordMessage.ProtoReflect.Descriptor instead.
func (*KeywordMessage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{0}
}

func (x *KeywordMessage) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type Creator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserID         string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CreatorName    string `protobuf:"bytes,3,opt,name=CreatorName,proto3" json:"CreatorName,omitempty"`
	CreatorPhoto   string `protobuf:"bytes,4,opt,name=CreatorPhoto,proto3" json:"CreatorPhoto,omitempty"`
	CoverPhoto     string `protobuf:"bytes,5,opt,name=CoverPhoto,proto3" json:"CoverPhoto,omitempty"`
	FollowersCount int64  `protobuf:"varint,6,opt,name=FollowersCount,proto3" json:"FollowersCount,omitempty"`
	Description    string `protobuf:"bytes,7,opt,name=Description,proto3" json:"Description,omitempty"`
	PostsCount     int64  `protobuf:"varint,8,opt,name=PostsCount,proto3" json:"PostsCount,omitempty"`
}

func (x *Creator) Reset() {
	*x = Creator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Creator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Creator) ProtoMessage() {}

func (x *Creator) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Creator.ProtoReflect.Descriptor instead.
func (*Creator) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{1}
}

func (x *Creator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Creator) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Creator) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *Creator) GetCreatorPhoto() string {
	if x != nil {
		return x.CreatorPhoto
	}
	return ""
}

func (x *Creator) GetCoverPhoto() string {
	if x != nil {
		return x.CoverPhoto
	}
	return ""
}

func (x *Creator) GetFollowersCount() int64 {
	if x != nil {
		return x.FollowersCount
	}
	return 0
}

func (x *Creator) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Creator) GetPostsCount() int64 {
	if x != nil {
		return x.PostsCount
	}
	return 0
}

type CreatorsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creators []*Creator `protobuf:"bytes,1,rep,name=Creators,proto3" json:"Creators,omitempty"`
	Error    string     `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CreatorsMessage) Reset() {
	*x = CreatorsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatorsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatorsMessage) ProtoMessage() {}

func (x *CreatorsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatorsMessage.ProtoReflect.Descriptor instead.
func (*CreatorsMessage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{2}
}

func (x *CreatorsMessage) GetCreators() []*Creator {
	if x != nil {
		return x.Creators
	}
	return nil
}

func (x *CreatorsMessage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UserCreatorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CreatorID string `protobuf:"bytes,2,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
}

func (x *UserCreatorMessage) Reset() {
	*x = UserCreatorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreatorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreatorMessage) ProtoMessage() {}

func (x *UserCreatorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreatorMessage.ProtoReflect.Descriptor instead.
func (*UserCreatorMessage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{3}
}

func (x *UserCreatorMessage) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserCreatorMessage) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

type SubscriptionCreatorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionID string `protobuf:"bytes,1,opt,name=SubscriptionID,proto3" json:"SubscriptionID,omitempty"`
	CreatorID      string `protobuf:"bytes,2,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
}

func (x *SubscriptionCreatorMessage) Reset() {
	*x = SubscriptionCreatorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionCreatorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionCreatorMessage) ProtoMessage() {}

func (x *SubscriptionCreatorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionCreatorMessage.ProtoReflect.Descriptor instead.
func (*SubscriptionCreatorMessage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{4}
}

func (x *SubscriptionCreatorMessage) GetSubscriptionID() string {
	if x != nil {
		return x.SubscriptionID
	}
	return ""
}

func (x *SubscriptionCreatorMessage) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

type PostUserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PostID string `protobuf:"bytes,2,opt,name=PostID,proto3" json:"PostID,omitempty"`
}

func (x *PostUserMessage) Reset() {
	*x = PostUserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostUserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostUserMessage) ProtoMessage() {}

func (x *PostUserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostUserMessage.ProtoReflect.Descriptor instead.
func (*PostUserMessage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{5}
}

func (x *PostUserMessage) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *PostUserMessage) GetPostID() string {
	if x != nil {
		return x.PostID
	}
	return ""
}

type UpdateCreatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorName string `protobuf:"bytes,1,opt,name=CreatorName,proto3" json:"CreatorName,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	CreatorID   string `protobuf:"bytes,3,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
}

func (x *UpdateCreatorInfo) Reset() {
	*x = UpdateCreatorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCreatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCreatorInfo) ProtoMessage() {}

func (x *UpdateCreatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCreatorInfo.ProtoReflect.Descriptor instead.
func (*UpdateCreatorInfo) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCreatorInfo) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *UpdateCreatorInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateCreatorInfo) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

type CreatorPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorInfo   *Creator              `protobuf:"bytes,1,opt,name=CreatorInfo,proto3" json:"CreatorInfo,omitempty"`
	AimInfo       *Aim                  `protobuf:"bytes,2,opt,name=AimInfo,proto3" json:"AimInfo,omitempty"`
	IsMyPage      bool                  `protobuf:"varint,3,opt,name=IsMyPage,proto3" json:"IsMyPage,omitempty"`
	Follows       bool                  `protobuf:"varint,4,opt,name=Follows,proto3" json:"Follows,omitempty"`
	Posts         []*Post               `protobuf:"bytes,5,rep,name=Posts,proto3" json:"Posts,omitempty"`
	Subscriptions []*proto.Subscription `protobuf:"bytes,6,rep,name=Subscriptions,proto3" json:"Subscriptions,omitempty"`
	Error         string                `protobuf:"bytes,7,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CreatorPage) Reset() {
	*x = CreatorPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatorPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatorPage) ProtoMessage() {}

func (x *CreatorPage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatorPage.ProtoReflect.Descriptor instead.
func (*CreatorPage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{7}
}

func (x *CreatorPage) GetCreatorInfo() *Creator {
	if x != nil {
		return x.CreatorInfo
	}
	return nil
}

func (x *CreatorPage) GetAimInfo() *Aim {
	if x != nil {
		return x.AimInfo
	}
	return nil
}

func (x *CreatorPage) GetIsMyPage() bool {
	if x != nil {
		return x.IsMyPage
	}
	return false
}

func (x *CreatorPage) GetFollows() bool {
	if x != nil {
		return x.Follows
	}
	return false
}

func (x *CreatorPage) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *CreatorPage) GetSubscriptions() []*proto.Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *CreatorPage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Aim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string `protobuf:"bytes,1,opt,name=Creator,proto3" json:"Creator,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	MoneyNeeded int64  `protobuf:"varint,3,opt,name=MoneyNeeded,proto3" json:"MoneyNeeded,omitempty"`
	MoneyGot    int64  `protobuf:"varint,4,opt,name=MoneyGot,proto3" json:"MoneyGot,omitempty"`
}

func (x *Aim) Reset() {
	*x = Aim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aim) ProtoMessage() {}

func (x *Aim) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aim.ProtoReflect.Descriptor instead.
func (*Aim) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{8}
}

func (x *Aim) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Aim) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Aim) GetMoneyNeeded() int64 {
	if x != nil {
		return x.MoneyNeeded
	}
	return 0
}

func (x *Aim) GetMoneyGot() int64 {
	if x != nil {
		return x.MoneyGot
	}
	return 0
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CreatorID       string                `protobuf:"bytes,2,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	Creation        string                `protobuf:"bytes,3,opt,name=Creation,proto3" json:"Creation,omitempty"`
	LikesCount      int64                 `protobuf:"varint,4,opt,name=LikesCount,proto3" json:"LikesCount,omitempty"`
	CreatorPhoto    string                `protobuf:"bytes,5,opt,name=CreatorPhoto,proto3" json:"CreatorPhoto,omitempty"`
	CreatorName     string                `protobuf:"bytes,6,opt,name=CreatorName,proto3" json:"CreatorName,omitempty"`
	Title           string                `protobuf:"bytes,7,opt,name=Title,proto3" json:"Title,omitempty"`
	Text            string                `protobuf:"bytes,8,opt,name=Text,proto3" json:"Text,omitempty"`
	IsAvailable     bool                  `protobuf:"varint,9,opt,name=IsAvailable,proto3" json:"IsAvailable,omitempty"`
	IsLiked         bool                  `protobuf:"varint,10,opt,name=IsLiked,proto3" json:"IsLiked,omitempty"`
	PostAttachments []*Attachment         `protobuf:"bytes,11,rep,name=PostAttachments,proto3" json:"PostAttachments,omitempty"`
	Subscriptions   []*proto.Subscription `protobuf:"bytes,12,rep,name=Subscriptions,proto3" json:"Subscriptions,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{9}
}

func (x *Post) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Post) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *Post) GetCreation() string {
	if x != nil {
		return x.Creation
	}
	return ""
}

func (x *Post) GetLikesCount() int64 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

func (x *Post) GetCreatorPhoto() string {
	if x != nil {
		return x.CreatorPhoto
	}
	return ""
}

func (x *Post) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *Post) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Post) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Post) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *Post) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *Post) GetPostAttachments() []*Attachment {
	if x != nil {
		return x.PostAttachments
	}
	return nil
}

func (x *Post) GetSubscriptions() []*proto.Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type PostsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts []*Post `protobuf:"bytes,1,rep,name=Posts,proto3" json:"Posts,omitempty"`
	Error string  `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *PostsMessage) Reset() {
	*x = PostsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsMessage) ProtoMessage() {}

func (x *PostsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsMessage.ProtoReflect.Descriptor instead.
func (*PostsMessage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{10}
}

func (x *PostsMessage) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *PostsMessage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type PostMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post  *Post  `protobuf:"bytes,1,opt,name=Post,proto3" json:"Post,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *PostMessage) Reset() {
	*x = PostMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMessage) ProtoMessage() {}

func (x *PostMessage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMessage.ProtoReflect.Descriptor instead.
func (*PostMessage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{11}
}

func (x *PostMessage) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *PostMessage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{12}
}

func (x *Attachment) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Attachment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Attachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachments []*Attachment `protobuf:"bytes,1,rep,name=Attachments,proto3" json:"Attachments,omitempty"`
}

func (x *Attachments) Reset() {
	*x = Attachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachments) ProtoMessage() {}

func (x *Attachments) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachments.ProtoReflect.Descriptor instead.
func (*Attachments) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{13}
}

func (x *Attachments) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type FlagMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag  bool   `protobuf:"varint,1,opt,name=Flag,proto3" json:"Flag,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *FlagMessage) Reset() {
	*x = FlagMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagMessage) ProtoMessage() {}

func (x *FlagMessage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagMessage.ProtoReflect.Descriptor instead.
func (*FlagMessage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{14}
}

func (x *FlagMessage) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

func (x *FlagMessage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Extension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extension string `protobuf:"bytes,1,opt,name=Extension,proto3" json:"Extension,omitempty"`
	Flag      bool   `protobuf:"varint,2,opt,name=Flag,proto3" json:"Flag,omitempty"`
}

func (x *Extension) Reset() {
	*x = Extension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Extension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extension) ProtoMessage() {}

func (x *Extension) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extension.ProtoReflect.Descriptor instead.
func (*Extension) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{15}
}

func (x *Extension) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *Extension) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

type PostCreationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string        `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Creator                string        `protobuf:"bytes,2,opt,name=Creator,proto3" json:"Creator,omitempty"`
	Title                  string        `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Text                   string        `protobuf:"bytes,4,opt,name=Text,proto3" json:"Text,omitempty"`
	Attachments            []*Attachment `protobuf:"bytes,5,rep,name=Attachments,proto3" json:"Attachments,omitempty"`
	AvailableSubscriptions []string      `protobuf:"bytes,6,rep,name=AvailableSubscriptions,proto3" json:"AvailableSubscriptions,omitempty"`
}

func (x *PostCreationData) Reset() {
	*x = PostCreationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCreationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCreationData) ProtoMessage() {}

func (x *PostCreationData) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCreationData.ProtoReflect.Descriptor instead.
func (*PostCreationData) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{16}
}

func (x *PostCreationData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostCreationData) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *PostCreationData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostCreationData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PostCreationData) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *PostCreationData) GetAvailableSubscriptions() []string {
	if x != nil {
		return x.AvailableSubscriptions
	}
	return nil
}

type PostEditData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Title                  string   `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Text                   string   `protobuf:"bytes,3,opt,name=Text,proto3" json:"Text,omitempty"`
	AvailableSubscriptions []string `protobuf:"bytes,4,rep,name=AvailableSubscriptions,proto3" json:"AvailableSubscriptions,omitempty"`
}

func (x *PostEditData) Reset() {
	*x = PostEditData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostEditData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostEditData) ProtoMessage() {}

func (x *PostEditData) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostEditData.ProtoReflect.Descriptor instead.
func (*PostEditData) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{17}
}

func (x *PostEditData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostEditData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostEditData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PostEditData) GetAvailableSubscriptions() []string {
	if x != nil {
		return x.AvailableSubscriptions
	}
	return nil
}

type PostAttachMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID     string      `protobuf:"bytes,1,opt,name=postID,proto3" json:"postID,omitempty"`
	Attachment *Attachment `protobuf:"bytes,2,opt,name=Attachment,proto3" json:"Attachment,omitempty"`
}

func (x *PostAttachMessage) Reset() {
	*x = PostAttachMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAttachMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAttachMessage) ProtoMessage() {}

func (x *PostAttachMessage) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAttachMessage.ProtoReflect.Descriptor instead.
func (*PostAttachMessage) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{18}
}

func (x *PostAttachMessage) GetPostID() string {
	if x != nil {
		return x.PostID
	}
	return ""
}

func (x *PostAttachMessage) GetAttachment() *Attachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type Like struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikesCount int64  `protobuf:"varint,1,opt,name=LikesCount,proto3" json:"LikesCount,omitempty"`
	PostID     string `protobuf:"bytes,2,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Error      string `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *Like) Reset() {
	*x = Like{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Like) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Like) ProtoMessage() {}

func (x *Like) ProtoReflect() protoreflect.Message {
	mi := &file_creator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Like.ProtoReflect.Descriptor instead.
func (*Like) Descriptor() ([]byte, []int) {
	return file_creator_proto_rawDescGZIP(), []int{19}
}

func (x *Like) GetLikesCount() int64 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

func (x *Like) GetPostID() string {
	if x != nil {
		return x.PostID
	}
	return ""
}

func (x *Like) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_creator_proto protoreflect.FileDescriptor

var file_creator_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2a, 0x0a,
	0x0e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x81, 0x02, 0x0a, 0x07, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4d, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x24, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4a, 0x0a, 0x12,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x22, 0x62, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x0f,
	0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22,
	0x75, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x22, 0xfe, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x07, 0x41, 0x69, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x41, 0x69, 0x6d, 0x52, 0x07, 0x41, 0x69, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4d, 0x79, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4d, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x50, 0x6f, 0x73, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x03, 0x41, 0x69, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x47, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x47, 0x6f, 0x74, 0x22, 0x8f, 0x03, 0x0a, 0x04, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49,
	0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x49, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x50,
	0x6f, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3a,
	0x0a, 0x0d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x41, 0x0a, 0x0c, 0x50, 0x6f,
	0x73, 0x74, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x50, 0x6f,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x05, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3e, 0x0a,
	0x0b, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x04,
	0x50, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x30, 0x0a,
	0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x3c, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2d,
	0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x37, 0x0a,
	0x0b, 0x46, 0x6c, 0x61, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3d, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xcd, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2d,
	0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a,
	0x16, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x36, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x16, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x58, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x54, 0x0a, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x69,
	0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xc3, 0x0a, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x46,
	0x69, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x0f, 0x2e, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x12, 0x2e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x13, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x0c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x12, 0x30, 0x0a, 0x09, 0x49, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x13, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x0c, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x00, 0x12, 0x22, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x6d, 0x12,
	0x04, 0x2e, 0x41, 0x69, 0x6d, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x66, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x14, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x10, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x0c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x49, 0x73, 0x50, 0x6f,
	0x73, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0c, 0x2e, 0x46, 0x6c, 0x61, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x4c, 0x69, 0x6b, 0x65, 0x12, 0x10, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x05, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x22, 0x00, 0x12,
	0x27, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x10, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x05, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x0c,
	0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x12, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x0f, 0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x0a, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x2e,
	0x5a, 0x2c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_creator_proto_rawDescOnce sync.Once
	file_creator_proto_rawDescData = file_creator_proto_rawDesc
)

func file_creator_proto_rawDescGZIP() []byte {
	file_creator_proto_rawDescOnce.Do(func() {
		file_creator_proto_rawDescData = protoimpl.X.CompressGZIP(file_creator_proto_rawDescData)
	})
	return file_creator_proto_rawDescData
}

var file_creator_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_creator_proto_goTypes = []interface{}{
	(*KeywordMessage)(nil),             // 0: KeywordMessage
	(*Creator)(nil),                    // 1: Creator
	(*CreatorsMessage)(nil),            // 2: CreatorsMessage
	(*UserCreatorMessage)(nil),         // 3: UserCreatorMessage
	(*SubscriptionCreatorMessage)(nil), // 4: SubscriptionCreatorMessage
	(*PostUserMessage)(nil),            // 5: PostUserMessage
	(*UpdateCreatorInfo)(nil),          // 6: UpdateCreatorInfo
	(*CreatorPage)(nil),                // 7: CreatorPage
	(*Aim)(nil),                        // 8: Aim
	(*Post)(nil),                       // 9: Post
	(*PostsMessage)(nil),               // 10: PostsMessage
	(*PostMessage)(nil),                // 11: PostMessage
	(*Attachment)(nil),                 // 12: Attachment
	(*Attachments)(nil),                // 13: Attachments
	(*FlagMessage)(nil),                // 14: FlagMessage
	(*Extension)(nil),                  // 15: Extension
	(*PostCreationData)(nil),           // 16: PostCreationData
	(*PostEditData)(nil),               // 17: PostEditData
	(*PostAttachMessage)(nil),          // 18: PostAttachMessage
	(*Like)(nil),                       // 19: Like
	(*proto.Subscription)(nil),         // 20: common.Subscription
	(*proto.UUIDMessage)(nil),          // 21: common.UUIDMessage
	(*proto.Empty)(nil),                // 22: common.Empty
	(*proto.UUIDResponse)(nil),         // 23: common.UUIDResponse
}
var file_creator_proto_depIdxs = []int32{
	1,  // 0: CreatorsMessage.Creators:type_name -> Creator
	1,  // 1: CreatorPage.CreatorInfo:type_name -> Creator
	8,  // 2: CreatorPage.AimInfo:type_name -> Aim
	9,  // 3: CreatorPage.Posts:type_name -> Post
	20, // 4: CreatorPage.Subscriptions:type_name -> common.Subscription
	12, // 5: Post.PostAttachments:type_name -> Attachment
	20, // 6: Post.Subscriptions:type_name -> common.Subscription
	9,  // 7: PostsMessage.Posts:type_name -> Post
	9,  // 8: PostMessage.Post:type_name -> Post
	12, // 9: Attachments.Attachments:type_name -> Attachment
	12, // 10: PostCreationData.Attachments:type_name -> Attachment
	12, // 11: PostAttachMessage.Attachment:type_name -> Attachment
	0,  // 12: CreatorService.FindCreators:input_type -> KeywordMessage
	3,  // 13: CreatorService.GetPage:input_type -> UserCreatorMessage
	6,  // 14: CreatorService.UpdateCreatorData:input_type -> UpdateCreatorInfo
	21, // 15: CreatorService.GetFeed:input_type -> common.UUIDMessage
	22, // 16: CreatorService.GetAllCreators:input_type -> common.Empty
	3,  // 17: CreatorService.IsCreator:input_type -> UserCreatorMessage
	8,  // 18: CreatorService.CreateAim:input_type -> Aim
	21, // 19: CreatorService.CheckIfCreator:input_type -> common.UUIDMessage
	16, // 20: CreatorService.CreatePost:input_type -> PostCreationData
	5,  // 21: CreatorService.GetPost:input_type -> PostUserMessage
	21, // 22: CreatorService.DeletePost:input_type -> common.UUIDMessage
	5,  // 23: CreatorService.IsPostOwner:input_type -> PostUserMessage
	5,  // 24: CreatorService.AddLike:input_type -> PostUserMessage
	5,  // 25: CreatorService.RemoveLike:input_type -> PostUserMessage
	17, // 26: CreatorService.EditPost:input_type -> PostEditData
	13, // 27: CreatorService.DeleteAttachmentsFiles:input_type -> Attachments
	21, // 28: CreatorService.DeleteAttachmentsByPostID:input_type -> common.UUIDMessage
	18, // 29: CreatorService.DeleteAttachment:input_type -> PostAttachMessage
	18, // 30: CreatorService.AddAttach:input_type -> PostAttachMessage
	0,  // 31: CreatorService.GetFileExtension:input_type -> KeywordMessage
	21, // 32: CreatorService.UpdateProfilePhoto:input_type -> common.UUIDMessage
	21, // 33: CreatorService.UpdateCoverPhoto:input_type -> common.UUIDMessage
	20, // 34: CreatorService.CreateSubscription:input_type -> common.Subscription
	4,  // 35: CreatorService.DeleteSubscription:input_type -> SubscriptionCreatorMessage
	20, // 36: CreatorService.EditSubscription:input_type -> common.Subscription
	2,  // 37: CreatorService.FindCreators:output_type -> CreatorsMessage
	7,  // 38: CreatorService.GetPage:output_type -> CreatorPage
	22, // 39: CreatorService.UpdateCreatorData:output_type -> common.Empty
	10, // 40: CreatorService.GetFeed:output_type -> PostsMessage
	2,  // 41: CreatorService.GetAllCreators:output_type -> CreatorsMessage
	14, // 42: CreatorService.IsCreator:output_type -> FlagMessage
	22, // 43: CreatorService.CreateAim:output_type -> common.Empty
	23, // 44: CreatorService.CheckIfCreator:output_type -> common.UUIDResponse
	22, // 45: CreatorService.CreatePost:output_type -> common.Empty
	11, // 46: CreatorService.GetPost:output_type -> PostMessage
	22, // 47: CreatorService.DeletePost:output_type -> common.Empty
	14, // 48: CreatorService.IsPostOwner:output_type -> FlagMessage
	19, // 49: CreatorService.AddLike:output_type -> Like
	19, // 50: CreatorService.RemoveLike:output_type -> Like
	22, // 51: CreatorService.EditPost:output_type -> common.Empty
	22, // 52: CreatorService.DeleteAttachmentsFiles:output_type -> common.Empty
	22, // 53: CreatorService.DeleteAttachmentsByPostID:output_type -> common.Empty
	22, // 54: CreatorService.DeleteAttachment:output_type -> common.Empty
	22, // 55: CreatorService.AddAttach:output_type -> common.Empty
	15, // 56: CreatorService.GetFileExtension:output_type -> Extension
	23, // 57: CreatorService.UpdateProfilePhoto:output_type -> common.UUIDResponse
	23, // 58: CreatorService.UpdateCoverPhoto:output_type -> common.UUIDResponse
	22, // 59: CreatorService.CreateSubscription:output_type -> common.Empty
	22, // 60: CreatorService.DeleteSubscription:output_type -> common.Empty
	22, // 61: CreatorService.EditSubscription:output_type -> common.Empty
	37, // [37:62] is the sub-list for method output_type
	12, // [12:37] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_creator_proto_init() }
func file_creator_proto_init() {
	if File_creator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_creator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeywordMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Creator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatorsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreatorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionCreatorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostUserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCreatorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatorPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Extension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCreationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostEditData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAttachMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Like); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_creator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_creator_proto_goTypes,
		DependencyIndexes: file_creator_proto_depIdxs,
		MessageInfos:      file_creator_proto_msgTypes,
	}.Build()
	File_creator_proto = out.File
	file_creator_proto_rawDesc = nil
	file_creator_proto_goTypes = nil
	file_creator_proto_depIdxs = nil
}
