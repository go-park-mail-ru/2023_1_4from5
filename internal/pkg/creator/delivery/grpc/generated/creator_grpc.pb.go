// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: creator.proto

package generated

import (
	context "context"
	proto "github.com/go-park-mail-ru/2023_1_4from5/internal/models/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CreatorService_FindCreators_FullMethodName       = "/CreatorService/FindCreators"
	CreatorService_GetPage_FullMethodName            = "/CreatorService/GetPage"
	CreatorService_UpdateCreatorData_FullMethodName  = "/CreatorService/UpdateCreatorData"
	CreatorService_UpdateProfilePhoto_FullMethodName = "/CreatorService/UpdateProfilePhoto"
	CreatorService_UpdateCoverPhoto_FullMethodName   = "/CreatorService/UpdateCoverPhoto"
)

// CreatorServiceClient is the client API for CreatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CreatorServiceClient interface {
	FindCreators(ctx context.Context, in *KeywordMessage, opts ...grpc.CallOption) (*CreatorsMessage, error)
	GetPage(ctx context.Context, in *UserCreatorMessage, opts ...grpc.CallOption) (*CreatorPage, error)
	UpdateCreatorData(ctx context.Context, in *UpdateCreatorInfo, opts ...grpc.CallOption) (*proto.Empty, error)
	UpdateProfilePhoto(ctx context.Context, in *proto.UUIDMessage, opts ...grpc.CallOption) (*proto.UUIDResponse, error)
	UpdateCoverPhoto(ctx context.Context, in *proto.UUIDMessage, opts ...grpc.CallOption) (*proto.UUIDResponse, error)
}

type creatorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreatorServiceClient(cc grpc.ClientConnInterface) CreatorServiceClient {
	return &creatorServiceClient{cc}
}

func (c *creatorServiceClient) FindCreators(ctx context.Context, in *KeywordMessage, opts ...grpc.CallOption) (*CreatorsMessage, error) {
	out := new(CreatorsMessage)
	err := c.cc.Invoke(ctx, CreatorService_FindCreators_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creatorServiceClient) GetPage(ctx context.Context, in *UserCreatorMessage, opts ...grpc.CallOption) (*CreatorPage, error) {
	out := new(CreatorPage)
	err := c.cc.Invoke(ctx, CreatorService_GetPage_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creatorServiceClient) UpdateCreatorData(ctx context.Context, in *UpdateCreatorInfo, opts ...grpc.CallOption) (*proto.Empty, error) {
	out := new(proto.Empty)
	err := c.cc.Invoke(ctx, CreatorService_UpdateCreatorData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creatorServiceClient) UpdateProfilePhoto(ctx context.Context, in *proto.UUIDMessage, opts ...grpc.CallOption) (*proto.UUIDResponse, error) {
	out := new(proto.UUIDResponse)
	err := c.cc.Invoke(ctx, CreatorService_UpdateProfilePhoto_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creatorServiceClient) UpdateCoverPhoto(ctx context.Context, in *proto.UUIDMessage, opts ...grpc.CallOption) (*proto.UUIDResponse, error) {
	out := new(proto.UUIDResponse)
	err := c.cc.Invoke(ctx, CreatorService_UpdateCoverPhoto_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreatorServiceServer is the server API for CreatorService service.
// All implementations must embed UnimplementedCreatorServiceServer
// for forward compatibility
type CreatorServiceServer interface {
	FindCreators(context.Context, *KeywordMessage) (*CreatorsMessage, error)
	GetPage(context.Context, *UserCreatorMessage) (*CreatorPage, error)
	UpdateCreatorData(context.Context, *UpdateCreatorInfo) (*proto.Empty, error)
	UpdateProfilePhoto(context.Context, *proto.UUIDMessage) (*proto.UUIDResponse, error)
	UpdateCoverPhoto(context.Context, *proto.UUIDMessage) (*proto.UUIDResponse, error)
	mustEmbedUnimplementedCreatorServiceServer()
}

// UnimplementedCreatorServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCreatorServiceServer struct {
}

func (UnimplementedCreatorServiceServer) FindCreators(context.Context, *KeywordMessage) (*CreatorsMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindCreators not implemented")
}
func (UnimplementedCreatorServiceServer) GetPage(context.Context, *UserCreatorMessage) (*CreatorPage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPage not implemented")
}
func (UnimplementedCreatorServiceServer) UpdateCreatorData(context.Context, *UpdateCreatorInfo) (*proto.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCreatorData not implemented")
}
func (UnimplementedCreatorServiceServer) UpdateProfilePhoto(context.Context, *proto.UUIDMessage) (*proto.UUIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProfilePhoto not implemented")
}
func (UnimplementedCreatorServiceServer) UpdateCoverPhoto(context.Context, *proto.UUIDMessage) (*proto.UUIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCoverPhoto not implemented")
}
func (UnimplementedCreatorServiceServer) mustEmbedUnimplementedCreatorServiceServer() {}

// UnsafeCreatorServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CreatorServiceServer will
// result in compilation errors.
type UnsafeCreatorServiceServer interface {
	mustEmbedUnimplementedCreatorServiceServer()
}

func RegisterCreatorServiceServer(s grpc.ServiceRegistrar, srv CreatorServiceServer) {
	s.RegisterService(&CreatorService_ServiceDesc, srv)
}

func _CreatorService_FindCreators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeywordMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreatorServiceServer).FindCreators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreatorService_FindCreators_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreatorServiceServer).FindCreators(ctx, req.(*KeywordMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreatorService_GetPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCreatorMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreatorServiceServer).GetPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreatorService_GetPage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreatorServiceServer).GetPage(ctx, req.(*UserCreatorMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreatorService_UpdateCreatorData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCreatorInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreatorServiceServer).UpdateCreatorData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreatorService_UpdateCreatorData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreatorServiceServer).UpdateCreatorData(ctx, req.(*UpdateCreatorInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreatorService_UpdateProfilePhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto.UUIDMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreatorServiceServer).UpdateProfilePhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreatorService_UpdateProfilePhoto_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreatorServiceServer).UpdateProfilePhoto(ctx, req.(*proto.UUIDMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreatorService_UpdateCoverPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto.UUIDMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreatorServiceServer).UpdateCoverPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreatorService_UpdateCoverPhoto_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreatorServiceServer).UpdateCoverPhoto(ctx, req.(*proto.UUIDMessage))
	}
	return interceptor(ctx, in, info, handler)
}

// CreatorService_ServiceDesc is the grpc.ServiceDesc for CreatorService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CreatorService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "CreatorService",
	HandlerType: (*CreatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindCreators",
			Handler:    _CreatorService_FindCreators_Handler,
		},
		{
			MethodName: "GetPage",
			Handler:    _CreatorService_GetPage_Handler,
		},
		{
			MethodName: "UpdateCreatorData",
			Handler:    _CreatorService_UpdateCreatorData_Handler,
		},
		{
			MethodName: "UpdateProfilePhoto",
			Handler:    _CreatorService_UpdateProfilePhoto_Handler,
		},
		{
			MethodName: "UpdateCoverPhoto",
			Handler:    _CreatorService_UpdateCoverPhoto_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "creator.proto",
}
